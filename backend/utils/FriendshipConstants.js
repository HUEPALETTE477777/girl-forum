

const USER_KEYS = {
    REQUESTER: "requester",
    RECIPIENT: "recipient",
    FRIEND: "friend",
};

const RESPONSE_KEYS = {
    SENT: "sent",
    RECEIVED: "received",
    UNFRIENDED: "unfriended",
    CANCEL: "canceled",
    FRIENDS: "friends",
    FRIEND: "friend",
};

const FRIENDSHIP_ACTIONS = {
    ACCEPT: "accept",
    CANCEL: "cancel",
    SEND: "send",
    UNFRIEND: "unfriend",
    GET_SINGLE_SENT_FRIEND_REQUEST: "getSingleSentFriendRequest",
};

const STATUS = {
    PENDING: "pending",
    ACCEPTED: "accepted",
};

const SUCCESS_MESSAGES = {
    ALL_FRIENDS: "SUCCESSFULLY RETRIEVED ALL FRIENDS!",
    NEW_FRIEND: "SUCCESSFULLY MADE A NEW FRIEND!",
    CANCELED_FRIEND_REQUEST: "SUCCESSFULLY CANCELED FRIEND REQUEST!",
    ALL_RECEIVED_FRIEND_REQUESTS: "SUCCESSFULLY RETRIEVED ALL RECEIVED FRIEND REQUESTS!",
    ALL_SENT_FRIEND_REQUESTS: "SUCCESSFULLY RETRIEVED ALL SENT FRIEND REQUESTS!",
    SENT_FRIEND_REQUEST: "SUCCESSFULLY SENT FRIEND REQUEST!",
    RETRIEVED_SENT_FRIEND_REQUEST: "SUCCESSFULLY RETRIEVED SENT FRIEND REQUEST!",
    UNFRIENDED_ALL_FRIENDS: "SUCCESSFULLY UNFRIENDED ALL FRIENDS",
    UNFRIENDED_FRIEND: "SUCCESSFULLY UNFRIENDED FRIEND"
}

const ERROR_MESSAGES = {
    NOT_FOUND_CANCEL: {
        error: "NO PENDING FRIEND REQUEST TO CANCEL"
    },
    NOT_FOUND_ACCEPT: {
        error: "NO PENDING FRIEND REQUEST TO ACCEPT"
    },
    NOT_FOUND_UNFRIEND: {
        error: "NO FRIEND TO UNFRIEND"
    },
    NOT_FOUND_GET_SINGLE_FRIEND_REQUEST: {
        error: "NO FRIEND REQUEST TO TARGET"
    },
    INVALID_ACTION: {
        message: "INVALID ACTION"
    },
    FRIENDSHIP_EXISTS: {
        error: "REQUEST ALREADY EXISTS OR YOU'RE ALREADY FRIENDS"
    },
    NOT_FOUND_USER_KEY: {
        error: "USER NOT FOUND"
    },
    ACTION_ON_ITSELF: {
        message: "CANNOT PERFORM ACTION ON YOURSELF"
    },
    UNCAUGHT_SERVER_ERROR: {
        message: "SERVER ERROR"
    }
}

module.exports = {
    USER_KEYS,
    RESPONSE_KEYS,
    FRIENDSHIP_ACTIONS,
    STATUS,
    SUCCESS_MESSAGES,
    ERROR_MESSAGES,
};
